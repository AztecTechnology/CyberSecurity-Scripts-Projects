All ansible container projects file will live herr
---
isntall ell yaml play book
​---
- name: Configure Elk VM with Docker
  hosts: elk
  remote_user: azureuser
  become: true
  tasks:
    # Use apt module
    - name: Install docker.io
      apt:
        update_cache: yes
        force_apt_get: yes
        name: docker.io
        state: present

      # Use apt module
    - name: Install python3-pip
      apt:
        force_apt_get: yes
        name: python3-pip
        state: present

      # Use pip module (It will default to pip3)
    - name: Install Docker module
      pip:
        name: docker
        state: present

      # Use command module
    - name: Increase virtual memory
      command: sysctl -w vm.max_map_count=262144

      # Use sysctl module
    - name: Use more memory
      sysctl:
        name: vm.max_map_count

install filebeat playbook below
​---
- name: installing and launching filebeat
  hosts: webservers
  become: yes
  tasks:

  - name: download filebeat deb
    command: curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.4.0-amd64.deb
  - name: install filebeat deb
    command: dpkg -i filebeat-7.4.0-amd64.deb

  - name: drop in filebeat.yml
    copy:
      src: /etc/ansible/filebeat-config.yml
      dest: /etc/filebeat/filebeat.yml

  - name: copy filebeat.yml
    copy:
      src: /etc/ansible/filebeat-config.yml
      dest: /etc/filebeat/filebeat.yml

  - name: enable and configure system module
    command: filebeat modules enable system

  - name: setup filebeat
Install metric beat playbook below
​---
- name: installing and launching metricbeat
  hosts: webservers
  become: yes
  tasks:

  - name: download metricbeat deb
    command: curl -L -O https://artifacts.elastic.co/downloads/beats/metricbeat/metricbeat-7.6.1-amd64.deb
  - name: install metricbeat deb
    command:  dpkg -i metricbeat-7.6.1-amd64.deb

  - name: drop in metricbeat.yml
    copy:
      src: /etc/ansible/metricbeat-config.yml
      dest: /etc/metricbeat/metricbeat.yml

  - name: copy metricbeat.yml
    copy:
      src: /etc/ansible/metricbeat-config.yml
      dest: /etc/metricbeat/metricbeat.yml

  - name: enable and configure system module
    command: metricbeat modules enable docker

  - name: setup metricbeat
    command: metricbeat setup
---

## Automated ELK Stack Deployment

The files in this repository were used to configure the network depicted below.

![TODO: Update the path with the name of your diagram](Images/diagram_filename.png)

These files have been tested and used to generate a live ELK deployment on Azure. They can be used to either recreate the entire deployment pictured above. Alternatively, select portions of the _____ file may be used to install only certain pieces of it, such as Filebeat.



This document contains the following details:
- Description of the Topology
- Access Policies
- ELK Configuration
  - Beats in Use
  - Machines Being Monitored
- How to Use the Ansible Build


### Description of the Topology

The main purpose of this network is to expose a load-balanced and monitored instance of DVWA, the D*mn Vulnerable Web Application.

Load balancing ensures that the application will be highly _____, in addition to restricting _____ to the network.
- Load balancer will assist with availability aspect of the webservers, providing the redundant webserver to be on for use in case of attack or down time. Jump box create a safe path to access said webservers without needing to expose them to the open ocean that is the internet. 

Integrating an ELK server allows users to easily monitor the vulnerable VMs for changes to the _____ and system _____.
- Filebeat beat watches for logs
-  Metricbeat  allows an admnistrator to track cpu/ram usage and network traffic in the logs Filebeat pulls

The configuration details of each machine may be found below.
_Note: Use the [Markdown Table Generator](http://www.tablesgenerator.com/markdown_tables) to add/remove values from the table_.

| Name          | Function      | IP Address    | Operating System |
| ------------- | ------------- | ------------- | ---------------- |
| Jump Box      | Gateway       | 10.0.0.1      | Linux            |
| Web-1         | webserver     | 10.0.0.9      | Linux            |
| Web-2         | webserver     | 10.0.0.8      | Linux            |
| ELK           | Kibana Host   | 10.1.0.4      | Linux            |
| Load Balancer | Load balancer | 40.83.182.109 | N/A              |

### Access Policies

The machines on the internal network are not exposed to the public Internet. 

Only the _____ machine can accept connections from the Internet. Access to this machine is only allowed from the following IP addresses:
- Only the jump Box machne can take connections from the internet only allowed from the below allowed ip adresses

Machines within the network can only be accessed by _____IPv4

A summary of the access policies in place can be found in the table below.

| Name     | Publicly Accessible | Allowed IP Addresses |
| -------- | ------------------- | -------------------- |
| Jump Box | Yes                 | My ipv4              |
| Web-1    | NO                  | 10.0.0.9             |
| Web-2    | NO                  | 10.0.0.8             |

### Elk Configuration

Ansible was used to automate configuration of the ELK machine. No configuration was performed manually, which is advantageous because...
- Biggest thing is that containers do not require too much power to operate, and any configuration if failure occurs can be remade and availability will only suffer for a bit . 

The playbook implements the following tasks:
- Open Azure and Create Virtual machine within jump box environment
- Download /install docker_install pythng-pp3 and the pip docker module
- run elk playbook
- run file beat playbook
- run metric playbook

The following screenshot displays the result of running `docker ps` after successfully configuring the ELK instance.

![TODO: Update the path with the name of your screenshot of docker ps output](Images/docker_ps_output.png)

### Target Machines & Beats
This ELK server is configured to monitor the following machines:
- WEB-1 and Web-2

We have installed the following Beats on these machines:
- Web-1: Filebeat & Metricbeat Web-2: Filebeat & Metricbeat

These Beats allow us to collect the following information from each machine:

- Filebeat monitors the system for local file system changes. Metricbeat logs CPU/RAM Utilization. 

### Using the Playbook
In order to use the playbook, you will need to have an Ansible control node already configured. Assuming you have such a control node provisioned: 

SSH into the control node and follow the steps below:
- Copy the __config files to _____etc/ansible. 
- Update the  confg file to include ip addresses of webservers and correct usernames and passwords 
- Run the playbook, and navigate to the elk machine to check that the installation worked as expected.


- _Which file is the playbook ?(that would be the file coded with YAML language) Where do you copy it?_(best practices is to place within etc/ansible but will run on ~ )
- **To verify your instance of ELK is functioning properly, go to** **http://[ELK-PUBLIC-IP]:5601/app/kibana** **and replace [ELK-PUBLIC-IP] with the IP address of the ELK VM.**
- http://40.121.110.118:5601/app/kibana#/discover?_g=(refreshInterval:(pause:!t,value:0),time:(from:now-15m,to:now))&_a=(columns:!(_source),index:'metricbeat-*',interval:h,query:(language:kuery,query:''),sort:!(!('@timestamp',desc)))

_Command to run play book:



ansible-playbook {"name of playbook"-playbook.yml}
